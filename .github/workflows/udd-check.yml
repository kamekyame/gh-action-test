name: Deno deps checker

on:
  workflow_call:
    inputs:
      deps_file:
        required: false
        type: string
    secrets:
      APP_ID:
        required: true
      PRIVATE_KEY:
        required: true

jobs:
  udd-check:
    runs-on: ubuntu-latest
    steps:
        - name: Show inputs
          run: |
            echo "deps file is ${{ inputs.deps_file }}"
        - uses: actions/checkout@v2
        - name: Generate token
          id: generate_token
          uses: tibdex/github-app-token@v1
          with:
            app_id: ${{ secrets.APP_ID }}
            private_key: ${{ secrets.PRIVATE_KEY }}
        - name: Git config
          run: |
            git config --local user.email "github-actions[bot]@users.noreply.github.com"
            git config --local user.name "github-actions[bot]"
        - uses: denoland/setup-deno@v1
          with:
            deno-version: v1.x
        - name: Install udd
          run: |
            deno install -A -f -n udd https://deno.land/x/udd/main.ts
        - name: Check update Deno dependency
          run: |
            udd ${{ inputs.deps_file }} > update.txt
            ls
            cat update.txt
            echo "aaa"
            sed -i -e '/^Successfully updated:$/,$p' update.txt
            cat update.txt
            echo "bbb"
            sed -e '1,$p' update.txt
        - name: Git diff
          id: diff
          continue-on-error: true
          run: |
            git add ${{ inputs.deps_file }}
            git diff --cached --quiet ${{ inputs.deps_file }}
        - name: Create Branch Name
          if: steps.diff.outcome == 'failure'
          id: branch
          env:
            TZ: 'Asia/Tokyo'
          run: | 
            DATE=`date +"%Y%m%d"`
            BRANCH_NAME="udd_$DATE"
            echo "::set-output name=name::$BRANCH_NAME"
        - name: Git checkout
          if: steps.diff.outcome == 'failure'
          run: | 
            echo ${{ steps.branch.outputs.name }}
            git checkout -b ${{ steps.branch.outputs.name }}
        - name: Git commit
          if: steps.diff.outcome == 'failure'
          run: |
            git commit -m "Update dependency"
            git push --set-upstream origin ${{ steps.branch.outputs.name }}
        - name: Create Pull Request
          if: steps.diff.outcome == 'failure'
          run: gh pr create --title "Update Deno Dependency" --body ""
          env:
            GH_TOKEN: ${{ steps.generate_token.outputs.token }}